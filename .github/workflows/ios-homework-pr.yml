name: iOS Homework PR checks

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/*.swift'
      - 'Package.swift'
      - '**/*.xcodeproj/**'
      - '**/*.xcworkspace/**'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: SwiftLint (zero-setup)
    runs-on: ubuntu-latest
    # Запускаем официальный контейнер SwiftLint — ничего не ставим руками.
    container:
      image: ghcr.io/realm/swiftlint:latest
    steps:
      - uses: actions/checkout@v4

      # Конфиг для "учебной" проверки создаём на лету (в проект его добавлять не нужно).
      - name: Generate SwiftLint CI config
        run: |
          cat > .swiftlint-ci.yml <<'YML'
          reporter: github-actions-logging
          strict: true
          only_rules:
            - attributes
            - closure_spacing
            - colon
            - comma
            - control_statement
            - force_cast
            - force_try
            - force_unwrapping
            - identifier_name
            - opening_brace
            - operator_usage_whitespace
            - redundant_optional_initialization
            - return_arrow_whitespace
            - statement_position
            - trailing_newline
            - trailing_semicolon
            - trailing_whitespace
            - type_name
            - vertical_whitespace
          YML

      # Аннотации появятся прямо в Checks у PR, строки подсветятся.
      - name: Run SwiftLint (strict)
        run: swiftlint lint --config .swiftlint-ci.yml --strict --reporter github-actions-logging

  build_spm:
    name: Compile check (SwiftPM, if present)
    # Автосборка запустится только если в репозитории есть Package.swift
    if: ${{ hashFiles('Package.swift') != '' }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Swift version
        run: swift --version
      - name: Build Swift Package (debug)
        run: swift build -c debug
